name: Building UI Service PipeLine
on:
  pull_request:
    branches:
      - dev
      - main
      - master
      - qa
      - staging
      - 'feature-*'
  push:
    branches:
      - main
      - master
      - 'feature-*'
      - '!releases/**-alpha'
      - 'feature/*'
      - testcases
  workflow_dispatch:

env:
  TEST_BUCKET: subham-dev
  REPO_NAME: "${{ github.event.repository.name }}"

permissions:
 id-token: write
 contents: read
 actions: read
 security-events: write

jobs:
  build:
    name: BuildAndPush
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Export Env Vars
      run: |
        BRANCH_NAME="${GITHUB_REF##*/}"
        echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV
        echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

    - uses: actions/checkout@v3
      with:
          fetch-depth: 0
            
    - name: Check any Leaked Secrets
      uses: gitleaks/gitleaks-action@v2.3.4
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        GITLEAKS_ENABLE_COMMENTS: 'true'
        GITLEAKS_NOTIFY_USER_LIST: '@smandal-tharkka'

    - name: Setup Nodejs
      uses: actions/setup-node@v3
      with:
        node-version: '18.12.1'

    - name: Install Initial dependencies
      run:  npm install

    - name: Install dependencies
      run:  npm install
      working-directory: server
    
    - name: Run Build & Test
      run: npm run build

    - name: Build Docker Image
      if : github.event_name != 'pull_request'
      run: |
        docker build -t ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ env.BRANCH_NAME }}:${{ github.run_number }}  -f ./docker/Dockerfile .
      #working-directory: docker
      
      
    - name: Run Trivy vulnerability scanner
      if : github.event_name != 'pull_request'
      uses: aquasecurity/trivy-action@master
      continue-on-error: true
      with:
        image-ref: 'ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ env.BRANCH_NAME }}:${{ github.run_number }}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'MEDIUM,HIGH,CRITICAL'
          
    - name: Run Trivy vulnerability scanner With Sarif
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}/${{ env.BRANCH_NAME }}:${{ github.run_number }}'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: ${{ success() && github.event_name == 'push' && github.ref == 'refs/heads/master' }}
      with:
        sarif_file: 'trivy-results.sarif'

    - name: Log in to the Container registry
      if : github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.TOKEN_GITHUB }}

    - name: Push Images To GitHub Container Registry
      if : github.event_name != 'pull_request'
      run: |
        docker push ghcr.io/${{ github.repository_owner }}/${{ env.REPO_NAME }}/${{ env.BRANCH_NAME }}:${{ github.run_number }}

    - name: Send Status To Slack
      uses: slackapi/slack-github-action@v1.24.0
      with:
       channel-id: 'C05NDTRNB4Z' #C05NDTRNB4Z
       slack-message: " '${{ github.job }}' Job in Workflow '${{ github.workflow }}' of Repo '${{ github.repository }}' for Branch '${{ env.BRANCH_NAME }}' has Result: ${{ job.status }}"
      env:
       SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      if: ${{ always() }}
